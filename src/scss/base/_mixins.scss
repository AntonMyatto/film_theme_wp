@use "variables" as *;

// Responsive breakpoints
@mixin respond-to($breakpoint) {
    @if $breakpoint == sm {
        @media (min-width: $breakpoint-sm) { @content; }
    }
    @else if $breakpoint == md {
        @media (min-width: $breakpoint-md) { @content; }
    }
    @else if $breakpoint == lg {
        @media (min-width: $breakpoint-lg) { @content; }
    }
    @else if $breakpoint == xl {
        @media (min-width: $breakpoint-xl) { @content; }
    }
}

// Container
@mixin container {
    width: 100%;
    max-width: $container-max-width;
    margin: 0 auto;
    padding: 0 $container-padding;
}

// Flexbox utilities
@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

// Typography
@mixin heading {
    font-weight: bold;
    line-height: 1.2;
    color: $primary-color;
}

// Buttons
@mixin button {
    display: inline-block;
    padding: $spacing-sm $spacing-md;
    border: none;
    border-radius: $border-radius;
    background-color: $secondary-color;
    color: $white;
    text-decoration: none;
    cursor: pointer;
    transition: $transition-base;

    &:hover {
        background-color: darken($secondary-color, 10%);
    }

    &:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }
}

// Card
@mixin card {
    background-color: $white;
    border-radius: $border-radius;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: $transition-base;

    &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
}

// Grid
@mixin grid($columns: 1, $gap: $spacing-md) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
} 